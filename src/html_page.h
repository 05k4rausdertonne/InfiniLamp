#ifndef html_page
#define html_page

#include "Arduino.h"

//use html minifier to minify the html file and paste it here
const char html_string[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset="UTF-8"><link rel="stylesheet" href="https://unpkg.com/purecss@1.0.1/build/base-min.css"><link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet"><link rel='icon' type='image/svg+xml' href="https://assets.dryicons.com/uploads/icon/svg/11858/4529e465-67b2-41be-be25-0251246e54f4.svg"><style>body{font-family:"Roboto",sans-serif;zoom:4}button{font-size:xx-large;padding:15px;border-radius:10%}.le_container{align-items:center;text-align:center;margin:10px;height:100%;padding:20px;background-color:darkgrey}.le_object{margin:auto;margin-bottom:20px;float:center;width:100%}.button{background-color:hsl(0,0%,66%);border-color:hsl(0,0%,73%)}.advanced{display:none}#advanced{float:right;width:20px;height:20px}#advancedLabel{float:right;padding-right:5px}</style> <script>let args=new Object({});window.addEventListener("load",init());function init(){getArgs();} function change(slider){args[slider.id]=parseInt(slider.value);updateSlider(slider);updateButton();} function updateSlider(slider){if(slider.id=="brightness"){document.getElementById("brightnessLabel").innerHTML="&#x1F506 "+Math.round(args["brightness"]*0.79)+"%";} if(slider.classList.contains("advanced")){document.getElementById(slider.id+"Label").innerHTML=slider.id+": "+slider.value;}} function updateButton(){let button=document.getElementById("setButton");let colorString="hsl("+Math.round(args["color"]*1.4118)+", "+(args["saturation"]*0.4)+"%, ";button.style.backgroundColor=colorString+"50%)";button.style.borderColor=colorString+"65%)";} async function buttonClick(){let url=window.location.href+"setargs?";for(let key in args){url+=(key+"="+args[key]+"&");} url+="a=0";console.log(url);let res=await fetch(url);let data=await res.json();console.log(data);setArgs(data);} function modeSelect(index){args["state"]=parseInt(index);console.log("new state: "+index);} async function getArgs(){let url=window.location.href+"getargs";let res=await fetch(url);let data=await res.json();console.log(data);setArgs(data);} function setArgs(data){args=data;document.getElementById("ip").innerHTML="IP: "+data["ip"];document.getElementById("powerbutton").style.backgroundColor=data["power"]?"white":"black";document.getElementById("powerbutton").style.borderColor=data["power"]?"lightgrey":"dimgrey";updateButton();for(let key in args){let slider=document.getElementById(key);if(slider!=undefined&&slider.type=="range"){slider.value=args[key];updateSlider(slider);}}} function updateAdvanced(checked){let sliders=document.getElementsByClassName("advanced");for(let slider of sliders){if(checked){slider.style.display="block";}else{slider.style.display="none";}}} async function toggle(button){let url=window.location.href+"toggle";let res=await fetch(url);let data=await res.json();console.log(data);setArgs(data);} async function refresh(){let url=window.location.href+"reinit";let res=await fetch(url);let data=await res.json();console.log(data);setArgs(data);}</script> </head><body><div class="le_container"><h1>KaleidoL&#228mp</h1><p id="ip">IP: What do i know &#x1F937</p><h3>Power</h3> <button id="powerbutton" onclick="toggle(this)">&#x1F4A1</button> <br><h3>Refresh</h3> <button class="button" id="refreshButton" onclick="refresh()">&#x1F504</button></div><div class="le_container"> <input type="checkbox" id="advanced" onclick="updateAdvanced(this.checked)"> <label for="advanced" id="advancedLabel">advanced </label> <br><h3>Settings</h3> <label for="state" class="le_object">Mode</label> <select id="state" class="le_object" onchange="modeSelect(this.selectedIndex)"><option selected="selected">Static</option><option>Rainbow</option><option>Twinkle</option><option>Heart Beat</option><option>Breathing</option><option>Strobe</option><option>Music Twinkle</option> </select> <label for="color" class="le_object">&#x1F3A8</label> <input type="range" min="0" max="255" value="128" class="slider le_object" id="color" oninput="change(this)"> <label for="saturation" class="le_object">&#x1F317</label> <input type="range" min="0" max="255" value="128" class="slider le_object" id="saturation" oninput="change(this)"> <label id="brightnessLabel" for="brightness" class="le_object">&#x1F506 50%</label> <input type="range" min="0" max="127" value="0" class="slider le_object" id="brightness" oninput="change(this)"> <label for="base" class="le_object advanced" id="baseLabel">base</label> <input type="range" min="0" max="255" value="128" class="slider le_object advanced" id="base" oninput="change(this)"> <label for="steps" class="le_object advanced" id="stepsLabel">steps</label> <input type="range" min="0" max="255" value="128" class="slider le_object advanced" id="steps" oninput="change(this)"> <label for="ticklength" class="le_object advanced" id="ticklengthLabel">ticklength</label> <input type="range" min="0" max="255" value="128" class="slider le_object advanced" id="ticklength" oninput="change(this)"> <label for="spectrum" class="le_object advanced" id="spectrumLabel">ticklength</label> <input type="range" min="0" max="255" value="128" class="slider le_object advanced" id="spectrum" oninput="change(this)"> <button class="button" id="setButton" onclick="buttonClick()">&#x1F4A9</button></div></body></html>
)=====";

#endif